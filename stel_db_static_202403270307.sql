--
-- Script was generated by Devart dbForge Studio for MySQL, Version 10.0.150.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 27/3/2024 03:07:12
-- Server version: 8.3.0
--

--
-- Disable foreign keys
--
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

--
-- Set SQL mode
--
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

--
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8mb4';

--
-- Set default database
--
USE stel_db_static;

--
-- Drop procedure `selectOperators`
--
DROP PROCEDURE IF EXISTS selectOperators;

--
-- Drop table `operator`
--
DROP TABLE IF EXISTS operator;

--
-- Drop procedure `selectMaterials`
--
DROP PROCEDURE IF EXISTS selectMaterials;

--
-- Drop table `material_has_standard`
--
DROP TABLE IF EXISTS material_has_standard;

--
-- Drop procedure `selectSettingsSpecification`
--
DROP PROCEDURE IF EXISTS selectSettingsSpecification;

--
-- Drop table `specification_configuration`
--
DROP TABLE IF EXISTS specification_configuration;

--
-- Drop procedure `selectSpecifications`
--
DROP PROCEDURE IF EXISTS selectSpecifications;

--
-- Drop table `specification`
--
DROP TABLE IF EXISTS specification;

--
-- Drop table `material`
--
DROP TABLE IF EXISTS material;

--
-- Drop procedure `selectConditionalPeriods`
--
DROP PROCEDURE IF EXISTS selectConditionalPeriods;

--
-- Drop table `conditional_period`
--
DROP TABLE IF EXISTS conditional_period;

--
-- Drop table `endcap`
--
DROP TABLE IF EXISTS endcap;

--
-- Drop procedure `selectEnviroment`
--
DROP PROCEDURE IF EXISTS selectEnviroment;

--
-- Drop table `enviroment`
--
DROP TABLE IF EXISTS enviroment;

--
-- Drop procedure `selectTestType`
--
DROP PROCEDURE IF EXISTS selectTestType;

--
-- Drop table `test_type`
--
DROP TABLE IF EXISTS test_type;

--
-- Drop procedure `selectStandards`
--
DROP PROCEDURE IF EXISTS selectStandards;

--
-- Drop table `standard`
--
DROP TABLE IF EXISTS standard;

--
-- Set default database
--
USE stel_db_static;

--
-- Create table `standard`
--
CREATE TABLE standard (
  id int UNSIGNED NOT NULL AUTO_INCREMENT,
  name varchar(50) NOT NULL,
  createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Standards: ISO, IRAM, ...',
ROW_FORMAT = DYNAMIC;

DELIMITER $$

--
-- Create procedure `selectStandards`
--
CREATE
DEFINER = 'root'@'%'
PROCEDURE selectStandards ()
DETERMINISTIC
BEGIN

  SELECT
    s.id AS idStandard,
    s.name AS standardName
  FROM standard s;

END
$$

DELIMITER ;

--
-- Create table `test_type`
--
CREATE TABLE test_type (
  id int UNSIGNED NOT NULL AUTO_INCREMENT,
  standard int UNSIGNED NOT NULL,
  testType varchar(150) NOT NULL,
  createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 2,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE test_type
ADD CONSTRAINT FK_testingtype FOREIGN KEY (standard)
REFERENCES standard (id);

DELIMITER $$

--
-- Create procedure `selectTestType`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE selectTestType (IN idStandard int UNSIGNED)
DETERMINISTIC
BEGIN

  SELECT
    tt.id,
    tt.testType
  FROM test_type tt
  WHERE tt.standard = idStandard;

END
$$

DELIMITER ;

--
-- Create table `enviroment`
--
CREATE TABLE enviroment (
  id int UNSIGNED NOT NULL AUTO_INCREMENT,
  standard int UNSIGNED NOT NULL,
  insertFluid varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  outFluid varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 5,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Enviroments',
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE enviroment
ADD CONSTRAINT FK_enviroment_has_standard_standard_id FOREIGN KEY (standard)
REFERENCES standard (id);

DELIMITER $$

--
-- Create procedure `selectEnviroment`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE selectEnviroment (IN idStandard int UNSIGNED)
DETERMINISTIC
BEGIN

  SELECT
    ehs.id,
    ehs.insertFluid,
    ehs.outFluid
  FROM enviroment ehs
  WHERE ehs.standard = idStandard;

END
$$

DELIMITER ;

--
-- Create table `endcap`
--
CREATE TABLE endcap (
  id int UNSIGNED NOT NULL,
  standard int UNSIGNED NOT NULL,
  type varchar(10) NOT NULL,
  createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE endcap
ADD CONSTRAINT FK_standard_has_endcap_standard_id FOREIGN KEY (standard)
REFERENCES standard (id) ON DELETE CASCADE;

--
-- Create table `conditional_period`
--
CREATE TABLE conditional_period (
  id int UNSIGNED NOT NULL,
  standard int UNSIGNED NOT NULL,
  time varchar(20) NOT NULL,
  minwall int UNSIGNED NOT NULL,
  maxwall int UNSIGNED NOT NULL,
  createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedtAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_unicode_ci,
COMMENT = 'Conditional Period related to Standard',
ROW_FORMAT = DYNAMIC;

--
-- Create index `UK_cond_period` on table `conditional_period`
--
ALTER TABLE conditional_period
ADD UNIQUE INDEX UK_cond_period (standard, id);

--
-- Create foreign key
--
ALTER TABLE conditional_period
ADD CONSTRAINT FK_cond_period_standard_id FOREIGN KEY (standard)
REFERENCES standard (id) ON DELETE CASCADE;

DELIMITER $$

--
-- Create procedure `selectConditionalPeriods`
--
CREATE
DEFINER = 'root'@'%'
PROCEDURE selectConditionalPeriods (IN idStandard int UNSIGNED)
DETERMINISTIC
BEGIN

  SELECT
    cp.id AS idCondPeriod,
    cp.minwall AS minWall,
    cp.maxwall AS maxWall,
    cp.time AS condPeriod
  FROM conditional_period cp
  WHERE cp.standard = idStandard
  ORDER BY cp.minwall;

END
$$

DELIMITER ;

--
-- Create table `material`
--
CREATE TABLE material (
  id int UNSIGNED NOT NULL,
  name varchar(50) NOT NULL,
  description varchar(120) NOT NULL,
  createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Material of Hoop',
ROW_FORMAT = DYNAMIC;

--
-- Create table `specification`
--
CREATE TABLE specification (
  id int UNSIGNED NOT NULL,
  material int UNSIGNED NOT NULL,
  name varchar(50) NOT NULL,
  description varchar(120) DEFAULT NULL,
  createdAt datetime NOT NULL,
  updatedAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Specification of material',
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE specification
ADD CONSTRAINT FK_specification_material_id FOREIGN KEY (material)
REFERENCES material (id);

DELIMITER $$

--
-- Create procedure `selectSpecifications`
--
CREATE
DEFINER = 'root'@'%'
PROCEDURE selectSpecifications (IN idMaterial int UNSIGNED)
DETERMINISTIC
BEGIN

  SELECT
    s.id AS idSpecification,
    s.name AS nameSpecification,
    s.description AS descriptionSpecification
  FROM specification s
  WHERE s.material = idMaterial;

END
$$

DELIMITER ;

--
-- Create table `specification_configuration`
--
CREATE TABLE specification_configuration (
  id int UNSIGNED NOT NULL AUTO_INCREMENT,
  specification int UNSIGNED NOT NULL,
  time smallint UNSIGNED NOT NULL,
  temperature tinyint UNSIGNED NOT NULL,
  createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 6,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Conditional period by Specification',
ROW_FORMAT = DYNAMIC;

--
-- Create index `FK_period_by_material_material_id` on table `specification_configuration`
--
ALTER TABLE specification_configuration
ADD INDEX FK_period_by_material_material_id (specification);

--
-- Create foreign key
--
ALTER TABLE specification_configuration
ADD CONSTRAINT FK_period_by_material_specification_id FOREIGN KEY (specification)
REFERENCES specification (id);

DELIMITER $$

--
-- Create procedure `selectSettingsSpecification`
--
CREATE
DEFINER = 'root'@'%'
PROCEDURE selectSettingsSpecification (IN idSpecification int UNSIGNED)
DETERMINISTIC
BEGIN

  SELECT
    sc.id AS idSetting,
    sc.time AS time,
    sc.temperature AS temperature
  FROM specification_configuration sc
  WHERE sc.specification = idSpecification;

END
$$

DELIMITER ;

--
-- Create table `material_has_standard`
--
CREATE TABLE material_has_standard (
  id int UNSIGNED NOT NULL AUTO_INCREMENT,
  idMaterial int UNSIGNED NOT NULL,
  idStandard int UNSIGNED NOT NULL,
  type varchar(25) NOT NULL,
  createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 6,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE material_has_standard
ADD CONSTRAINT FK_material_has_standard_material_id FOREIGN KEY (idMaterial)
REFERENCES material (id);

--
-- Create foreign key
--
ALTER TABLE material_has_standard
ADD CONSTRAINT FK_material_has_standard_standard_id FOREIGN KEY (idStandard)
REFERENCES standard (id);

DELIMITER $$

--
-- Create procedure `selectMaterials`
--
CREATE
DEFINER = 'root'@'%'
PROCEDURE selectMaterials (IN idStandard int UNSIGNED)
DETERMINISTIC
BEGIN

  SELECT
    mhs.idMaterial AS idMaterial,
    m.name AS materialName,
    m.description AS materialDescription,
    mhs.type AS materialType
  FROM material m
    INNER JOIN material_has_standard mhs
      ON m.id = mhs.idMaterial
  WHERE mhs.idStandard = idStandard;

END
$$

DELIMITER ;

--
-- Create table `operator`
--
CREATE TABLE operator (
  dni int UNSIGNED NOT NULL,
  name varchar(50) NOT NULL,
  familyname varchar(255) NOT NULL,
  createdAt datetime(4) NOT NULL DEFAULT CURRENT_TIMESTAMP(4),
  updatedAt datetime(4) NOT NULL DEFAULT CURRENT_TIMESTAMP(4) ON UPDATE CURRENT_TIMESTAMP(4),
  PRIMARY KEY (dni)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

DELIMITER $$

--
-- Create procedure `selectOperators`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE selectOperators ()
DETERMINISTIC
BEGIN

  SELECT
    o.dni,
    o.name,
    o.familyname
  FROM operator o;

END
$$

DELIMITER ;

CREATE USER 'dataCollector'@'%' IDENTIFIED WITH mysql_native_password PASSWORD EXPIRE DEFAULT;
GRANT EXECUTE ON PROCEDURE stel_db_data.insertdata TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_data.insertsample TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_data.insertspecimen TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_data.selectsampleid TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_static.selectconditionalperiods TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_static.selectenviroment TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_static.selectmaterials TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_static.selectoperators TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_static.selectsettingsspecification TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_static.selectspecifications TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_static.selectstandards TO 'dataCollector'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_static.selecttesttype TO 'dataCollector'@'%';

CREATE USER 'mysql.infoschema'@'localhost' IDENTIFIED WITH caching_sha2_password PASSWORD EXPIRE DEFAULT ACCOUNT LOCK;
GRANT SELECT, AUDIT_ABORT_EXEMPT, FIREWALL_EXEMPT, SYSTEM_USER ON *.* TO 'mysql.infoschema'@'localhost';

CREATE USER 'mysql.session'@'localhost' IDENTIFIED WITH caching_sha2_password PASSWORD EXPIRE DEFAULT ACCOUNT LOCK;
GRANT SHUTDOWN, SUPER, AUDIT_ABORT_EXEMPT, AUTHENTICATION_POLICY_ADMIN, BACKUP_ADMIN, CLONE_ADMIN, CONNECTION_ADMIN, FIREWALL_EXEMPT, PERSIST_RO_VARIABLES_ADMIN, SESSION_VARIABLES_ADMIN, SYSTEM_USER, SYSTEM_VARIABLES_ADMIN ON *.* TO 'mysql.session'@'localhost';
GRANT SELECT ON performance_schema.* TO 'mysql.session'@'localhost';
GRANT SELECT ON TABLE mysql.user TO 'mysql.session'@'localhost';

CREATE USER 'mysql.sys'@'localhost' IDENTIFIED WITH caching_sha2_password PASSWORD EXPIRE DEFAULT ACCOUNT LOCK;
GRANT AUDIT_ABORT_EXEMPT, FIREWALL_EXEMPT, SYSTEM_USER ON *.* TO 'mysql.sys'@'localhost';
GRANT TRIGGER ON sys.* TO 'mysql.sys'@'localhost';
GRANT SELECT ON TABLE sys.sys_config TO 'mysql.sys'@'localhost';

CREATE USER 'reportGenerator'@'%' IDENTIFIED WITH mysql_native_password PASSWORD EXPIRE NEVER;
GRANT EXECUTE ON *.* TO 'reportGenerator'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_data.deletetest TO 'reportGenerator'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_data.selectcomparetests TO 'reportGenerator'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_data.selecttest TO 'reportGenerator'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_data.selecttestdata TO 'reportGenerator'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_data.selecttests TO 'reportGenerator'@'%';
GRANT EXECUTE ON PROCEDURE stel_db_data.updatespecimen TO 'reportGenerator'@'%';

CREATE USER 'root'@'%' IDENTIFIED WITH caching_sha2_password PASSWORD EXPIRE DEFAULT;
GRANT USAGE ON *.* TO 'root'@'%'
WITH GRANT OPTION;
GRANT ALTER, ALTER ROUTINE, CREATE, CREATE ROLE, CREATE ROUTINE, CREATE TABLESPACE, CREATE TEMPORARY TABLES, CREATE USER, CREATE VIEW, DELETE, DROP, DROP ROLE, EVENT, EXECUTE, FILE, INDEX, INSERT, LOCK TABLES, PROCESS, REFERENCES, RELOAD, REPLICATION CLIENT, REPLICATION SLAVE, SELECT, SHOW DATABASES, SHOW VIEW, SHUTDOWN, SUPER, TRIGGER, UPDATE, ALLOW_NONEXISTENT_DEFINER, APPLICATION_PASSWORD_ADMIN, AUDIT_ABORT_EXEMPT, AUDIT_ADMIN, AUTHENTICATION_POLICY_ADMIN, BACKUP_ADMIN, BINLOG_ADMIN, BINLOG_ENCRYPTION_ADMIN, CLONE_ADMIN, CONNECTION_ADMIN, ENCRYPTION_KEY_ADMIN, FIREWALL_EXEMPT, FLUSH_OPTIMIZER_COSTS, FLUSH_STATUS, FLUSH_TABLES, FLUSH_USER_RESOURCES, GROUP_REPLICATION_ADMIN, GROUP_REPLICATION_STREAM, INNODB_REDO_LOG_ARCHIVE, INNODB_REDO_LOG_ENABLE, PASSWORDLESS_USER_ADMIN, PERSIST_RO_VARIABLES_ADMIN, REPLICATION_APPLIER, REPLICATION_SLAVE_ADMIN, RESOURCE_GROUP_ADMIN, RESOURCE_GROUP_USER, ROLE_ADMIN, SENSITIVE_VARIABLES_OBSERVER, SERVICE_CONNECTION_ADMIN, SESSION_VARIABLES_ADMIN, SET_ANY_DEFINER, SHOW_ROUTINE, SYSTEM_USER, SYSTEM_VARIABLES_ADMIN, TABLE_ENCRYPTION_ADMIN, TELEMETRY_LOG_ADMIN, TRANSACTION_GTID_TAG, XA_RECOVER_ADMIN ON *.* TO 'root'@'%';

CREATE USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password PASSWORD EXPIRE DEFAULT;
GRANT USAGE ON *.* TO 'root'@'localhost'
WITH GRANT OPTION;
GRANT ALLOW_NONEXISTENT_DEFINER, ALTER, ALTER ROUTINE, APPLICATION_PASSWORD_ADMIN, AUDIT_ABORT_EXEMPT, AUDIT_ADMIN, AUTHENTICATION_POLICY_ADMIN, BACKUP_ADMIN, BINLOG_ADMIN, BINLOG_ENCRYPTION_ADMIN, CLONE_ADMIN, CONNECTION_ADMIN, CREATE, CREATE ROLE, CREATE ROUTINE, CREATE TABLESPACE, CREATE TEMPORARY TABLES, CREATE USER, CREATE VIEW, DELETE, DROP, DROP ROLE, ENCRYPTION_KEY_ADMIN, EVENT, EXECUTE, FILE, FIREWALL_EXEMPT, FLUSH_OPTIMIZER_COSTS, FLUSH_STATUS, FLUSH_TABLES, FLUSH_USER_RESOURCES, GROUP_REPLICATION_ADMIN, GROUP_REPLICATION_STREAM, INDEX, INNODB_REDO_LOG_ARCHIVE, INNODB_REDO_LOG_ENABLE, INSERT, LOCK TABLES, PASSWORDLESS_USER_ADMIN, PERSIST_RO_VARIABLES_ADMIN, PROCESS, REFERENCES, RELOAD, REPLICATION CLIENT, REPLICATION SLAVE, REPLICATION_APPLIER, REPLICATION_SLAVE_ADMIN, RESOURCE_GROUP_ADMIN, RESOURCE_GROUP_USER, ROLE_ADMIN, SELECT, SENSITIVE_VARIABLES_OBSERVER, SERVICE_CONNECTION_ADMIN, SESSION_VARIABLES_ADMIN, SET_ANY_DEFINER, SHOW DATABASES, SHOW VIEW, SHOW_ROUTINE, SHUTDOWN, SUPER, SYSTEM_USER, SYSTEM_VARIABLES_ADMIN, TABLE_ENCRYPTION_ADMIN, TELEMETRY_LOG_ADMIN, TRANSACTION_GTID_TAG, TRIGGER, UPDATE, XA_RECOVER_ADMIN ON *.* TO 'root'@'localhost';

GRANT PROXY ON ''@'' TO 'root'@'%' WITH GRANT OPTION;

GRANT PROXY ON ''@'' TO 'root'@'localhost' WITH GRANT OPTION;

-- 
-- Dumping data for table material
--
INSERT INTO material VALUES
(0, 'PE', '', '2023-12-15 12:45:36', '2024-01-08 23:29:09'),
(1, 'PBC', '', '2023-12-20 12:57:44', '2024-01-08 23:29:09');

-- 
-- Dumping data for table specification
--
INSERT INTO specification VALUES
(0, 0, 'PE100', NULL, '2023-12-15 12:46:03', '2024-03-26 11:41:22'),
(1, 0, 'PE50', NULL, '2023-12-18 20:06:57', '2024-03-26 11:41:22'),
(2, 1, 'PBC-200', NULL, '2023-12-20 13:03:02', '2024-03-26 11:41:22');

-- 
-- Dumping data for table standard
--
INSERT INTO standard VALUES
(1, 'ISO-1167-1996', '2023-12-18 21:16:48', '2024-03-26 02:29:26'),
(2, 'IRAM-4567', '2023-12-04 21:48:00', '2024-03-26 02:29:22');

-- 
-- Dumping data for table test_type
--
INSERT INTO test_type VALUES
(1, 1, 'Prueba de Resistencia en Presión interna', '2024-03-27 02:22:38', '2024-03-27 02:22:38');

-- 
-- Dumping data for table specification_configuration
--
INSERT INTO specification_configuration VALUES
(1, 0, 1000, 20, '2024-01-08 00:00:00', '2024-01-09 02:15:44'),
(2, 1, 10, 150, '2024-01-08 00:00:00', '2024-01-08 00:00:00'),
(3, 1, 30, 50, '2024-01-08 00:00:00', '2024-01-09 02:16:05'),
(4, 2, 60, 50, '2024-01-08 00:00:00', '2024-01-08 00:00:00'),
(5, 0, 100, 90, '2024-01-08 23:13:53', '2024-01-08 23:13:56');

-- 
-- Dumping data for table operator
--
INSERT INTO operator VALUES
(33452323, 'Camus', 'Penguin', '2024-03-27 02:09:41.1974', '2024-03-27 02:09:41.1974'),
(39068857, 'Ezequiel Augusto', 'Stanganelli', '2024-03-27 02:09:11.9623', '2024-03-27 02:09:11.9623'),
(45693035, 'Dinko', 'Salak', '2024-03-27 02:09:26.1003', '2024-03-27 02:09:26.1003');

-- 
-- Dumping data for table material_has_standard
--
INSERT INTO material_has_standard VALUES
(4, 0, 1, 'Plástico', '2024-03-26 11:24:58', '2024-03-26 11:24:58'),
(5, 1, 2, 'Plástiico', '2024-03-26 11:26:25', '2024-03-26 11:26:25');

-- 
-- Dumping data for table enviroment
--
INSERT INTO enviroment VALUES
(1, 1, 'Agua', 'Agua', '2024-03-27 02:20:46', '2024-03-27 02:20:46'),
(2, 1, 'Agua', 'Liquido', '2024-03-27 02:21:01', '2024-03-27 02:21:01'),
(3, 1, 'Agua', 'Aire', '2024-03-27 02:21:31', '2024-03-27 02:21:31'),
(4, 2, 'Agua', 'Aire', '2024-03-27 02:21:46', '2024-03-27 02:21:46');

-- Table stel_db_static.endcap does not contain any data (it is empty)

-- 
-- Dumping data for table conditional_period
--
INSERT INTO conditional_period VALUES
(0, 1, '1 h ± 5 min', 0, 3, '2023-12-04 21:48:36', '2024-03-26 00:23:39'),
(1, 1, '3 h ± 15 min', 3, 8, '2023-12-04 21:49:27', '2024-03-26 00:23:59'),
(2, 1, '6 h ± 30 min', 8, 16, '2023-12-04 21:56:39', '2024-03-26 00:24:09'),
(3, 1, '10 h ± 1 h', 16, 32, '2023-12-04 21:56:39', '2024-03-26 00:24:18'),
(4, 1, '16 h ± 1 h', 32, 9999999, '2023-12-04 21:56:39', '2024-03-26 00:24:31');

--
-- Restore previous SQL mode
--
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

--
-- Enable foreign keys
--
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;